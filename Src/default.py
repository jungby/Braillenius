#   MAKES MORE ROUNDED THE DOTS
sphere_faces = "$fs=0.3;\n$fa=1.0;\n\n"

#   DOTS EQUIVALENT
dots = str('dots = [\n'
+'[" ",[0,0,0, 0,0,0]],\n'
+'["a",[1,0,0, 0,0,0]],\n'
+'["b",[1,1,0, 0,0,0]],\n'
+'["c",[1,0,0, 1,0,0]],\n'
+'["d",[1,0,0, 1,1,0]],\n'
+'["e",[1,0,0, 0,1,0]],\n'
+'["f",[1,1,0, 1,0,0]],\n'
+'["g",[1,1,0, 1,1,0]],\n'
+'["h",[1,1,0, 0,1,0]],\n'
+'["i",[0,1,0, 1,0,0]],\n'
+'["j",[0,1,0, 1,1,0]],\n'
+'["k",[1,0,1, 0,0,0]],\n'
+'["l",[1,1,1, 0,0,0]],\n'
+'["m",[1,0,1, 1,0,0]],\n'
+'["n",[1,0,1, 1,1,0]],\n'
+'["ñ",[1,1,0, 1,1,1]],\n'
+'["o",[1,0,1, 0,1,0]],\n'
+'["p",[1,1,1, 1,0,0]],\n'
+'["q",[1,1,1, 1,1,0]],\n'
+'["r",[1,1,1, 0,1,0]],\n'
+'["s",[0,1,1, 1,0,0]],\n'
+'["t",[0,1,1, 1,1,0]],\n'
+'["u",[1,0,1, 0,0,1]],\n'
+'["v",[1,1,1, 0,0,1]],\n'
+'["w",[0,1,0, 1,1,1]],\n'
+'["x",[1,0,1, 1,0,1]],\n'
+'["y",[1,0,1, 1,1,1]],\n'
+'["z",[1,0,1, 0,1,1]],\n'
+'["á",[1,1,1, 0,1,1]],\n'
+'["é",[0,1,1, 1,0,1]],\n'
+'["í",[0,0,1, 1,0,0]],\n'
+'["ó",[0,0,1, 1,0,1]],\n'
+'["ú",[0,1,1, 1,1,1]],\n'
+'["ü",[1,1,0, 0,1,1]],\n'
+'["#",[0,0,1, 1,1,1]],\n'
+'["_",[0,0,0, 1,1,1]],\n'
+'["-",[0,0,1, 0,0,1]],\n'
+'[":",[0,1,0, 0,1,0]],\n'
+'[";",[0,1,1, 0,0,0]],\n'
+'[".",[0,0,1, 0,0,0]],\n'
+'[",",[0,1,0, 0,0,0]],\n'
+'["¿",[0,1,0, 0,0,1]],\n'
+'["?",[0,1,0, 0,0,1]],\n'
+'["\\"",[0,1,0, 0,0,1]],\n'
+'["!",[0,1,1, 0,1,0]],\n'
+'["¡",[0,1,1, 0,1,0]],\n'
+'["<",[1,1,0, 0,0,1]],\n'
+'[">",[0,0,1, 1,1,0]],\n'
+'["&",[1,1,1, 1,0,1]],\n'
+'["(",[0,1,1, 0,1,1]],\n'
+'[")",[0,1,1, 0,1,1]],\n\n'
+'["•",[1,1,1, 1,1,1]] // test ALL 6 not Braille\n'
+'];\n')

#   POSITIONATES DOTS
spheres = str('module BrailleDots(dot,y=2.5,x=2.5,r=.6){\n'
+'if(dot[0])translate([0,2*y]) sphere(r);// point 1 \n'
+'if(dot[1])translate([0,1*y]) sphere(r);// point 2 \n'
+'if(dot[2])translate([0,0]) sphere(r);// point 3 \n'
+'if(dot[3])translate([x,2*y]) sphere(r);// point 4 \n'
+'if(dot[4])translate([x,1*y]) sphere(r);// point 5 \n'
+'if(dot[5])translate([x,0]) sphere(r);// point 6 \n'
+'}\n\n')

#   NUMBERS EQUIVALENT
num_equivalents = {
    '1': "#A",
    '2': "#B",
    '3': "#C",
    '4': "#D",
    '5': "#E",
    '6': "#F",
    '7': "#G",
    '8': "#H",
    '9': "#I",
    '0': "#J",
}

#   FINDS THE NUMBER EQUIVALENT AND REPLACES IT
def number(line):
    x = line.replace(line, num_equivalents[line])
    return x